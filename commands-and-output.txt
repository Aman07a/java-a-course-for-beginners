jshell> List<Integer> list = List.of(1,4,7,9);
list ==> [1, 4, 7, 9]

jshell> list.stream().forEach(
   ...>       element -> System.out.println(element)
   ...> )
1
4
7
9

jshell> list.stream().filter(
   ...>                element -> element%2 == 1)
$3 ==> java.util.stream.ReferencePipeline$2@29ca901e

jshell> list.stream().filter(
   ...>                element -> element%2 == 1).
   ...>              forEach( 
   ...>                element -> System.out.println(element))
1
7
9

jshell> list.stream().filter(element -> element%2==1).forEach(element->System.out.println(element))
1
7
9

jshell> list.stream().filter(element -> element%2==0).forEach(element->System.out.println(element))
4

jshell> clear()
|  Error:
|  cannot find symbol
|    symbol:   method clear()
|  clear()
|  ^---^

jshell> void clear() { System.out.print("\033[H\033[2J ");}
|  created method clear()

jshell> void clear() { System.out.print("\033[H\033[2J ");}
|  modified method clear()

jshell> clear()

 
jshell> List<Integer> numbers = List.of(3,5,8,213,45,4,7);
numbers ==> [3, 5, 8, 213, 45, 4, 7]

jshell> numbers.stream().sorted().forEach(e->System.out.println(e));
3
4
5
7
8
45
213

jshell> List<Integer> numbers = List.of(3,5,3,213,45,5,7);
numbers ==> [3, 5, 3, 213, 45, 5, 7]

jshell> numbers.stream().distinct().forEach(e->System.out.println(e));
3
5
213
45
7

jshell> numbers.stream().distinct().sorted().forEach(e->System.out.println(e));
3
5
7
45
213

jshell> numbers.stream().distinct().map(e -> e * e).forEach(e->System.out.println(e));
9
25
45369
2025
49

jshell> clear()

 
jshell> IntStream.range(1,10).forEach(p->System.out.println(p))
1
2
3
4
5
6
7
8
9

jshell> IntStream.range(1,11).forEach(p->System.out.println(p))
1
2
3
4
5
6
7
8
9
10

jshell> IntStream.range(1,11).map(e -> e * e).forEach(p->System.out.println(p))
1
4
9
16
25
36
49
64
81
100

jshell> List.of("Apple", "Ant", "Bat").stream().map(s->s.lower
jshell> List.of("Apple", "Ant", "Bat").stream().map(s->s.lowercase()).forEach(p -> System.out.println(p))
|  Error:
|  cannot find symbol
|    symbol:   method lowercase()
|  List.of("Apple", "Ant", "Bat").stream().map(s->s.lowercase()).forEach(p -> System.out.println(p))
|                                                 ^---------^

jshell> List.of("Apple", "Ant", "Bat").stream().map(s->s.lowerCase()).forEach(p -> System.out.println(p))
|  Error:
|  cannot find symbol
|    symbol:   method lowerCase()
|  List.of("Apple", "Ant", "Bat").stream().map(s->s.lowerCase()).forEach(p -> System.out.println(p))
|                                                 ^---------^

jshell> List.of("Apple", "Ant", "Bat").stream().map(s->s.toLowerCase()).forEach(p -> System.out.println(p))
apple
ant
bat

jshell> List.of("Apple", "Ant", "Bat").stream().map(s->s.length()).forEach(p -> System.out.println(p))
5
3
3

jshell> clear()

 
jshell> IntStream.range(1,11).reduce( 0 , (n1,n2) -> n1+n2)
$23 ==> 55
